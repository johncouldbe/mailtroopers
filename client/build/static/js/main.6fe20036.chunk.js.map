{"version":3,"sources":["components/images/bullhorn.svg","components/images/share.svg","config.js","components/images/bomb.svg","local-storage.js","actions/email.js","actions/modal.js","actions/io.js","actions/user.js","components/landing-page/LandingPage.js","components/navbar/Navbar.js","components/dashboard/right-sidebar/comments/Comments.js","components/dashboard/right-sidebar/troop/Troop.js","actions/index.js","components/dashboard/right-sidebar/RightSidebar.js","components/dashboard/left-sidebar/LeftSidebar.js","components/dashboard/main/version/Version.js","components/dashboard/main/Main.js","components/modals/recruit-modal/RecruitModal.js","components/modals/comment-modal/CommentModal.js","components/input/Input.js","validators.js","components/modals/create-email-modal/CreateEmailForm.js","components/modals/create-email-modal/CreateEmailModal.js","components/modals/copied-modal/CopiedModal.js","components/dashboard/Dashboard.js","components/modals/signup-modal/SignUp.js","components/modals/signup-modal/SignUpWrapper.js","components/modals/login-modal/LogIn.js","components/modals/login-modal/LogInWrapper.js","components/app/App.js","registerServiceWorker.js","reducers/index.js","reducers/modal.js","reducers/user.js","reducers/email.js","reducers/io.js","store.js","index.js","components/images/thumbs-up.svg"],"names":["module","exports","__webpack_require__","p","SOCKET_URL","BASE_URL","clearAuthToken","localStorage","removeItem","storeEmails","emails","type","deleteCampaign","campaign","socket","dispatch","emit","selectCampaign","updateCurrentVersion","version","sendComment","campaignId","userId","comment","clearRecruitMsgs","removeRecruit","recruit","deleteVersion","toggleRecruitModal","toggleCommentModal","toggleCreateEmailModal","toggleCopiedModal","connectSocket","storeAuthInfo","authToken","id","decodedToken","jwtDecode","setItem","saveAuthToken","setAuthToken","setCurrentUser","user","_id","axios","get","concat","then","data","catch","err","console","log","getState","io","connect","once","token","on","campaigns","email","currentUser","map","room","emailModal","modal","createEmailModal","addNewCampaign","removeCampaign","selectedCampaign","updateCampaign","recruits","recruited","hookInSocket","registerErr","logInUser","password","btoa","url","method","headers","Authorization","res","logInErr","refreshAuthToken","state","loggedIn","props","react_default","a","createElement","react_router_dom_es","to","className","onClick","window","confirm","Comments","_Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","showCommentModal","bind","assertThisInitialized","inherits","createClass","key","value","commentId","deleteComment","_this2","versions","length","comments","currentVersion","index","formattedComment","split","item","deleteBtn","firstName","lastName","moment","date","fromNow","src","require","alt","e","preventDefault","commentBtn","Component","Troop","firstLetter","name","toUpperCase","showRecruitModal","master","contributors","trooper","deleteRecruit","troop","troopBtn","toggleLeftSidebar","toggleRightSidebar","toggleTeam","toggleComments","toggleReview","RightSidebar","apply","arguments","teamOpen","commentsOpen","hidePanels","buttonDirection","right_sidebar_troop_Troop","right_sidebar_comments_Comments","mailTrooper","Clipboard","LeftSidebar","_getPrototypeOf2","_len","args","Array","_key","showModal","deleteEmail","removeEmail","emailFile","classes","data-clipboard-text","slug","onMouseOver","currentTarget","lastChild","onMouseLeave","format","stopPropagation","reviewOpen","style","marginLeft","float","marginTop","lineHeight","updateVersion","num","toCheck","deleteVersionOption","Main","padding","current","subject","dangerouslySetInnerHTML","__html","html","innerWidth","leftSidebarOpen","rightSidebarOpen","pickMainClass","version_Version","leftBtn","rightBtn","displayContainer","RecruitModal","hideRecruitModal","copied","addressList","notEmail","address","test","document","getElementById","validateEmail","setState","find","userEmail","contributor","includes","toConsumableArray","filter","add","removeFromList","addresses","_this3","sendRecruit","_this4","emailError","onSubmit","addToList","list","recruitBtn","failures","successes","successMsg","join","failureMsg","fontSize","recruitedContainer","addRecruitContainer","recruitFailures","recruitSuccesses","CommentModal","handleChange","text","target","hideCommentModal","send","trim","sent","warning","margin","thumbsUp","onChange","Input","prevProps","meta","active","input","focus","error","touched","htmlFor","label","assign","fontFamily","marginBottom","ref","React","required","undefined","nonEmpty","isTrimmed","CreateEmailForm","values","createNewCampaign","handleSubmit","redux_form_es","component","validate","disabled","pristine","submitting","reduxForm","form","onSubmitFail","errors","keys","createEmailErr","hideModal","create_email_modal_CreateEmailForm","CopiedModal","hideCopiedModal","Dashboard","recruitmodal","recruitModal","modals_recruit_modal_RecruitModal","commentmodal","commentModal","modals_comment_modal_CommentModal","modals_create_email_modal_CreateEmailModal","copiedModal","modals_copied_modal_CopiedModal","dashboard_left_sidebar_LeftSidebar","dashboard_right_sidebar_RightSidebar","dashboard_main_Main","PacmanLoader_default","color","size","SignUp","post","registerUser","field","regErr","min","max","allValues","modals_signup_modal_SignUp","logErr","LogIn","modals_login_modal_LogIn","App","hasAuthToken","nextProps","startPeriodicRefresh","stopPeriodicRefresh","close","refreshInterval","setInterval","clearInterval","path","Navbar","exact","LandingPage","SignUpWrapper","LogInWrapper","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","initialState","store","createStore","combineReducers","action","returnedMail","successful","formReducer","applyMiddleware","thunk","getItem","ReactDOM","render","es","components_app_App","URL","process","origin","addEventListener","fetch","response","status","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.6fe20036.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bullhorn.843e9160.svg\";","module.exports = __webpack_public_path__ + \"static/media/share.52822437.svg\";","exports.SOCKET_URL = process.env.NODE_ENV === 'production' ? \"https://mailtroopers.herokuapp.com\" : \"http://localhost:8080\"\n\nexports.BASE_URL = process.env.NODE_ENV === 'production' ? \"https://mailtroopers.herokuapp.com\" : \"http://localhost:8080\"\n","module.exports = __webpack_public_path__ + \"static/media/bomb.9463f931.svg\";","export const loadAuthToken = () => {\n    return localStorage.getItem('authToken');\n};\n\nexport const saveAuthToken = authToken => {\n    localStorage.setItem('authToken', authToken);\n};\n\nexport const clearAuthToken = () => {\n    localStorage.removeItem('authToken');\n};\n","import axios from 'axios'\nimport {BASE_URL} from '../config'\n\nexport const CREATE_EMAIL_ERR = 'CREATE_EMAIL_ERR'\nexport const createEmailErr = err => ({\n  type: CREATE_EMAIL_ERR,\n  err\n})\n\nexport const createNewCampaign = (campaign, user, socket) => dispatch => {\n  return socket.emit('add campaign', {campaign, user})\n}\n\nexport const getCampaigns = id => dispatch => {\n  return axios.get(`${BASE_URL}/campaigns/${id}`)\n  .then(emails => {\n    dispatch(storeEmails(emails.data))\n  })\n  .catch(err => {\n    console.log(err)\n  })\n}\n\nexport const ADD_NEW_CAMPAIGN = 'ADD_NEW_CAMPAIGN'\nexport const addNewCampaign = campaign => ({\n  type: ADD_NEW_CAMPAIGN,\n  campaign\n})\n\nexport const STORE_EMAILS = 'STORE_EMAILS'\nexport const storeEmails = emails => ({\n  type: STORE_EMAILS,\n  emails\n})\n\nexport const deleteCampaign = (campaign, socket) => dispatch => {\n  return socket.emit('delete campaign', campaign)\n}\n\nexport const REMOVE_CAMPAIGN = 'REMOVE_CAMPAIGN'\nexport const removeCampaign = campaign => ({\n  type: REMOVE_CAMPAIGN,\n  campaign\n})\n\nexport const SELECT_CAMPAIGN = 'SELECT_CAMPAIGN'\nexport const selectCampaign = campaign => ({\n  type: SELECT_CAMPAIGN,\n  campaign\n})\n\nexport const UPDATE_CURRENT_VERSION = 'UPDATE_CURRENT_VERSION'\nexport const updateCurrentVersion = version => ({\n  type: UPDATE_CURRENT_VERSION,\n  version\n})\n\nexport const sendComment = (campaignId, version, userId, comment, socket) => dispatch => {\n  return socket.emit('add comment', {\n    campaignId,\n    version,\n    userId,\n    comment\n  })\n}\n\nexport const UPDATE_CAMPAIGN = 'UPDATE_CAMPAIGN'\nexport const updateCampaign = campaign => ({\n  type: UPDATE_CAMPAIGN,\n  campaign\n})\n\nexport const deleteComment = (campaignId, version, commentId, socket) => dispatch => {\n  return socket.emit('delete comment', {\n    campaignId,\n    version,\n    commentId\n  })\n}\n\nexport const recruit = (addresses, id, socket) => dispatch => {\n  return socket.emit('recruit', {\n    addresses,\n    id\n  })\n}\n\nexport const RECRUITED = 'RECRUITED'\nexport const recruited = (recruits) => ({\n  type: RECRUITED,\n  recruits\n})\n\nexport const CLEAR_RECRUIT_MSGS = 'CLEAR_RECRUIT_MSGS'\nexport const clearRecruitMsgs = ({\n  type: CLEAR_RECRUIT_MSGS,\n})\n\n\nexport const removeRecruit = (recruit, campaignId, socket) => dispatch => {\n  return socket.emit('remove recruit', {recruit, campaignId})\n}\n\nexport const deleteVersion = (version, campaignId, socket) => dispatch => {\n  return socket.emit('delete version', {version, campaignId})\n}\n","export const TOGGLE_RECRUIT_MODAL = 'TOGGLE_RECRUIT_MODAL'\nexport const toggleRecruitModal = {\n  type: TOGGLE_RECRUIT_MODAL\n}\n\nexport const TOGGLE_COMMENT_MODAL = 'TOGGLE_COMMENT_MODAL'\nexport const toggleCommentModal = {\n  type: TOGGLE_COMMENT_MODAL\n}\n\nexport const TOGGLE_CREATE_EMAIL_MODAL = 'TOGGLE_CREATE_EMAIL_MODAL'\nexport const toggleCreateEmailModal = {\n  type: TOGGLE_CREATE_EMAIL_MODAL\n}\n\nexport const TOGGLE_COPIED_MODAL = 'TOGGLE_COPIED_MODAL'\nexport const toggleCopiedModal = {\n  type: TOGGLE_COPIED_MODAL\n}\n","import io from 'socket.io-client'\n\nimport {addNewCampaign,removeCampaign, selectCampaign, updateCampaign, recruited} from './email'\nimport {SOCKET_URL} from '../config'\nimport {toggleCreateEmailModal} from './modal'\n\nexport const CONNECT_SOCKET = 'CONNECT_SOCKET'\nexport const connectSocket = socket => ({\n  type: CONNECT_SOCKET,\n  socket\n})\n\nexport const DISCONNECT_SOCKET = 'DISCONNECT_SOCKET'\nexport const disconnectSocket = () => ({\n  type: DISCONNECT_SOCKET\n})\n\nexport const hookInSocket = authToken => (dispatch, getState) => {\n  const socket = io.connect(SOCKET_URL)\n  socket.once('connect', () => {\n    socket\n    .emit('authenticate', {token: authToken})\n    .on('authenticated', () => {\n      const campaigns = getState().email.emails\n      const userId = getState().user.currentUser._id\n      dispatch(connectSocket(socket))\n\n      campaigns.map(room => {\n        return socket.emit('room', room._id)\n      })\n      socket.emit('room', userId)\n    })\n    .on('campaign added', campaign => {\n      const emailModal = getState().modal.createEmailModal\n      console.log('campaign added', campaign);\n      dispatch(addNewCampaign(campaign))\n      if(emailModal) dispatch(toggleCreateEmailModal)\n    })\n    .on('campaign deleted', campaign => {\n      dispatch(removeCampaign(campaign))\n      const selectedCampaign = getState().email.selectedCampaign\n\n      if(!selectedCampaign) return\n      if(campaign._id === selectedCampaign._id){\n        dispatch(selectCampaign(null))\n      }\n    })\n    .on('update campaign', campaign => {\n      dispatch(updateCampaign(campaign))\n    })\n    .on('recruited', recruits => {\n      dispatch(recruited(recruits))\n    })\n    .on('join room', room => {\n      socket.emit('room', room)\n    })\n    .on('unauthorized', () => {\n      dispatch(connectSocket(null))\n    })\n  })\n}\n","import axios from 'axios'\nimport jwtDecode from 'jwt-decode'\nimport {BASE_URL} from '../config'\nimport {saveAuthToken, clearAuthToken} from '../local-storage'\nimport {hookInSocket} from './io'\n\nimport {getCampaigns} from './email'\n\n// Stores the auth token in state and localStorage, and decodes and stores\n// the user data stored in the token\nconst storeAuthInfo = (authToken, dispatch) => {\n  const decodedToken = jwtDecode(authToken)\n  saveAuthToken(authToken)\n  dispatch(setAuthToken(authToken))\n  dispatch(setCurrentUser(decodedToken.user))\n  dispatch(getCampaigns(decodedToken.user._id))\n  .then(() => dispatch(hookInSocket(authToken)))\n}\n\nexport const registerUser = user => dispatch => {\n  return axios.post(`${BASE_URL}/user/register`, {\n    user\n  })\n  .then(res => {\n    if(res.data.err){\n      dispatch(registerErr(res.data.err))\n    }\n  })\n}\n\nexport const REGISTER_ERR = 'REGISTER_ERR'\nexport const registerErr = err => ({\n  type: REGISTER_ERR,\n  err\n})\n\nexport const SET_AUTH_TOKEN = 'SET_AUTH_TOKEN'\nexport const setAuthToken = authToken => ({\n    type: SET_AUTH_TOKEN,\n    authToken\n})\n\nexport const SET_CURRENT_USER = 'SET_CURRENT_USER'\nexport const setCurrentUser = currentUser => ({\n    type: SET_CURRENT_USER,\n    currentUser\n})\n\nexport const logInUser = (email, password) => dispatch => {\n  const token = btoa(`${email}:${password}`)\n  axios({\n    url: `${BASE_URL}/auth/login`,\n    method: 'post',\n    headers: {\n      Authorization: `Basic ${token}`\n    }\n  })\n  .then(res => {\n    const authToken = res.data.authToken\n    storeAuthInfo(authToken, dispatch)\n  })\n  .catch(err => {\n    console.log(err);\n    dispatch(logInErr('Incorrect username or password'))\n  })\n}\n\nexport const LOGIN_ERR = 'LOGIN_ERR'\nexport const logInErr = err => ({\n  type: LOGIN_ERR,\n  err\n})\n\nexport const refreshAuthToken = () => (dispatch, getState) => {\n  const authToken = getState().user.authToken\n  return axios(`${BASE_URL}/auth/refresh`, {\n      method: 'POST',\n      headers: {\n        // Provide our existing token as credentials to get a new one\n        Authorization: `Bearer ${authToken}`\n      }\n    })\n    .then(res => {\n      storeAuthInfo(res.data.authToken, dispatch)\n    })\n    .catch(err => {\n        // We couldn't get a refresh token because our current credentials\n        // are invalid or expired, so clear them and sign us out\n        dispatch(setCurrentUser(null));\n        dispatch(setAuthToken(null));\n        clearAuthToken(authToken);\n    });\n};\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport {Redirect, Link} from 'react-router-dom';\n\nimport './LandingPage.css'\n\nexport function LandingPage(props) {\n    // If we are logged in redirect straight to the user's dashboard\n    if (props.loggedIn) {\n        return <Redirect to=\"/dashboard\" />;\n    }\n\n    return (\n        <div className=\"home\">\n          <header>\n            <div className=\"header-letter-left\"></div>\n            <div className=\"header-letter-right\"></div>\n            <div className=\"h1 white-text header-text\">STOP SENDING MISTAKES</div>\n          </header>\n          <main>\n            <section>\n              <div className=\"first-ribbon-start\"></div>\n              <div className=\"left-content\"></div>\n              <div className=\"right-content\">\n                <div className=\"h1 white-text left-content-header LP-H1\">Collaborate as a Team</div>\n                <div className=\"p white-text\">Lets face it... We've been doing it wrong. But no longer.</div>\n                <div className=\"p white-text\">Now, your team has a place for reviewing your email marketing campaigns. You no longer have to forward an email to get others to review. No more confusing comment trains that build up in your inbox!</div>\n                <Link to=\"/register\">\n                  <button className=\"home-screen-btn\">\n                    <span className=\"p white-text\">Try It Out!</span>\n                    </button>\n                  </Link>\n              </div>\n            </section>\n            <section>\n              <div className=\"first-ribbon-side\"></div>\n              <div className=\"first-ribbon-end\"></div>\n              <div className=\"second-ribbon-start\"></div>\n            </section>\n            <section className=\"taller-section\">\n              <div className=\"second-ribbon-side\"></div>\n              <div className=\"second-ribbon-end\"></div>\n              <div className=\"second-ribbon-end-bottom\"></div>\n              <div className=\"LP-List\">\n                <div className=\"h1 white-text center-text LP-H1\">How it Works...</div>\n                <div className=\"p white-text\">\n                  <ol>\n                    <li>Create that awesome email on whatever email marketing\n                    tool you're using. i.e. Mailchimp, Constant Contact, etc.</li>\n                    <li>Create a new campaign in the app.</li>\n                    <li>Send your email to the unique email address created for\n                    you. Each time you send an email to that address a new version\n                    will be created.</li>\n                    <li>Add recruits to review your new campaign.</li>\n                    <li>Rinse and repeat.</li>\n                  </ol>\n                </div>\n              </div>\n            </section>\n\n          </main>\n        </div>\n    );\n}\n\nconst mapStateToProps = state => ({\n    loggedIn: state.user.currentUser !== null\n});\n\nexport default connect(mapStateToProps)(LandingPage);\n","import React from 'react'\nimport {connect} from 'react-redux'\nimport {Link} from 'react-router-dom'\n\nimport './Navbar.css'\nimport {setCurrentUser, setAuthToken} from '../../actions/user';\nimport {clearAuthToken} from '../../local-storage';\n\nexport function Navbar(props) {\n  const logOut = () => {\n    if(window.confirm(\"Are you sure you want to log out?\")){\n      props.dispatch(setCurrentUser(null))\n      props.dispatch(setAuthToken(null))\n      clearAuthToken()\n    }\n  }\n  const renderLog = () => {\n    if(props.loggedIn){\n      return (\n        <div className=\"off-white-text h4\" onClick={() => logOut()}>Log Out</div>\n      )\n    }\n\n    return (\n      <div>\n        <Link to=\"/login\">\n          <span className=\"off-white-text h4\">\n            Log In\n          </span>\n        </Link>\n        <span className=\"off-white-text h4\"> | </span>\n        <Link to=\"/register\">\n          <span className=\"off-white-text h4\">\n            Register\n          </span>\n        </Link>\n      </div>\n    )\n  }\n\n  return(\n    <nav>\n      <div className='logo'>\n        <div className=\"off-white-text h1\">MailTroopers</div>\n      </div>\n      <div className='log'>\n        {renderLog()}\n      </div>\n    </nav>\n  )\n}\n\nconst mapStateToProps = state => ({\n  loggedIn: state.user.currentUser !== null\n})\n\nexport default connect(mapStateToProps)(Navbar)\n","import React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport moment from 'moment'\n\nimport {toggleCommentModal} from '../../../../actions/modal'\nimport {deleteComment} from '../../../../actions/email'\n// import {BrowserRouter as Link} from 'react-router-dom'\n\nimport './Comments.css'\n\nexport class Comments extends Component {\n  constructor(props){\n    super(props)\n\n    this.showCommentModal = this.showCommentModal.bind(this)\n  }\n\n  deleteComment(campaignId, version, commentId, socket){\n    if(window.confirm('Are you sure you want to delete this comment?')){\n      this.props.dispatch(deleteComment(campaignId, version, commentId, socket))\n    }\n  }\n\n  comments() {\n    if(this.props.selectedCampaign &&\n    this.props.selectedCampaign.versions.length){\n      const comments = this.props.selectedCampaign.versions[this.props.currentVersion - 1].comments\n      const version = this.props.selectedCampaign.versions[this.props.currentVersion - 1]._id\n      const campaignId = this.props.selectedCampaign._id\n      const socket = this.props.socket\n\n      return comments.map((comment, index) => {\n\n        const formattedComment = comment.comment.split('\\n').map(function(item, key) {\n          return (\n            <span key={key}>\n            {item}\n            <br/>\n            </span>\n          )\n        })\n\n        const deleteBtn = comment.user._id === this.props.currentUser._id\n          ? <div className=\"delete-comment\"\n            onClick={() => { this.deleteComment(campaignId, version, comment._id,  socket)}}\n          ></div>\n          : ''\n\n        return <div className=\"comment\" key={index}>\n          <div className=\"comment-container\">\n            {deleteBtn}\n            <div className=\"h3 red-text comment-name\">{comment.user.firstName} {comment.user.lastName}</div>\n            <div className=\"h4 grey-text comment-date\">{moment(comment.date).fromNow()}</div>\n            <div className=\"p grey-text comment-comment\">{formattedComment}</div>\n          </div>\n        </div>\n      })\n    }\n  }\n\n  commentBtn() {\n    if(this.props.selectedCampaign &&\n      this.props.selectedCampaign.versions.length){\n        return <div className=\"btn-container\">\n          <button className=\"btn\" onClick={this.showCommentModal}>\n            Comment &nbsp;\n            <img src={require(\"../../../images/bullhorn.svg\")} alt=\"Share\" />\n          </button>\n        </div>\n    }\n  }\n\n  showCommentModal(e){\n    e.preventDefault()\n    this.props.dispatch(toggleCommentModal)\n  }\n\n  render(){\n    return(\n      <div className=\"comments\">\n        {this.commentBtn()}\n        {this.comments()}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  selectedCampaign: state.email.selectedCampaign,\n  currentVersion: state.email.currentVersion,\n  currentUser: state.user.currentUser,\n  socket: state.io.socket\n})\n\nexport default connect(mapStateToProps)(Comments)\n","import React, {Component} from 'react'\nimport {connect} from 'react-redux'\n\nimport {toggleRecruitModal} from '../../../../actions/modal'\nimport {removeRecruit} from '../../../../actions/email'\n\nimport './Troop.css'\n\nexport class Troop extends Component {\n  constructor(props){\n    super(props)\n\n    this.showRecruitModal = this.showRecruitModal.bind(this)\n  }\n\n  troop() {\n    if(!this.props.selectedCampaign){\n      return\n    }\n\n    const master = this.props.selectedCampaign.master === this.props.currentUser._id\n    const socket = this.props.socket\n    const campaignId = this.props.selectedCampaign._id\n    const hasContributors = this.props.selectedCampaign.contributors.length\n\n    if(!hasContributors && master){\n      return <div>\n        <div className=\"h3 red-text center-text\">\n          {`Those emails won't review themselves!`}\n        </div>\n        <div className=\"h4 grey-text center-text\">\n          {`Build your team`}\n        </div>\n      </div>\n    }\n\n    return this.props.selectedCampaign.contributors.map((trooper, index) => {\n      const deleteRecruit = master\n      ? <div\n        className=\"delete-recruit\"\n        onClick={() => {\n          this.props.dispatch(removeRecruit(trooper._id, campaignId, socket))\n        }}\n      ></div>\n      : ''\n\n      return <div className=\"trooper-container\" key={index}>\n        <div className=\"trooper-img\">\n          <div className=\"h2 white-text\">\n            {this.firstLetter(trooper.firstName)}\n          </div>\n        </div>\n        <div className=\"h4 trooper-name grey-text\">\n          {`${trooper.firstName} ${trooper.lastName}`}\n        </div>\n        {deleteRecruit}\n      </div>\n    })\n  }\n\n  troopBtn() {\n    if(this.props.selectedCampaign\n      && this.props.selectedCampaign.master === this.props.currentUser._id){\n      return <div className=\"btn-container\">\n        <button className=\"btn\" onClick={this.showRecruitModal}>\n          Recruit &nbsp;\n          <img src={require(\"../../../images/share.svg\")} alt=\"Share\" />\n        </button>\n      </div>\n    }\n  }\n\n  firstLetter = name => {\n    const letter = name.split('')\n    return letter[0].toUpperCase()\n  }\n\n  showRecruitModal(e){\n    e.preventDefault()\n    this.props.dispatch(toggleRecruitModal)\n  }\n\n  render(){\n    return(\n      <div className=\"troop\">\n        {this.troop()}\n        {this.troopBtn()}\n      </div>\n    )\n  }\n}\nconst mapStateToProps = state => ({\n  currentUser: state.user.currentUser,\n  selectedCampaign: state.email.selectedCampaign,\n  socket: state.io.socket\n})\nexport default connect(mapStateToProps)(Troop)\n","export const TOGGLE_LEFT_SIDEBAR = 'TOGGLE_LEFT_SIDEBAR'\nexport const toggleLeftSidebar = {\n  type: TOGGLE_LEFT_SIDEBAR\n}\n\nexport const TOGGLE_RIGHT_SIDEBAR = 'TOGGLE_RIGHT_SIDEBAR'\nexport const toggleRightSidebar = {\n  type: TOGGLE_RIGHT_SIDEBAR\n}\n\nexport const TOGGLE_TEAM = 'TOGGLE_TEAM'\nexport const toggleTeam = {\n  type: TOGGLE_TEAM\n}\n\nexport const TOGGLE_COMMENTS = 'TOGGLE_COMMENTS'\nexport const toggleComments = {\n  type: TOGGLE_COMMENTS\n}\n\nexport const TOGGLE_REVIEW = 'TOGGLE_REVIEW'\nexport const toggleReview = {\n  type: TOGGLE_REVIEW\n}\n","import React, {Component} from 'react'\nimport {connect} from 'react-redux'\n\nimport Comments from './comments/Comments'\nimport Troop from './troop/Troop'\n\nimport {toggleTeam, toggleComments} from '../../../actions'\n\nimport './RightSidebar.css'\n\nexport class RightSidebar extends Component {\n\n  hidePanels() {\n    if(!this.props.teamOpen && this.props.commentsOpen){\n      return 'right-sidebar close-team'\n    }\n    if(this.props.teamOpen && !this.props.commentsOpen){\n      return 'right-sidebar close-comments'\n    }\n    if(!this.props.teamOpen && !this.props.commentsOpen){\n      return 'right-sidebar close-team-and-comments'\n    }\n    return 'right-sidebar'\n  }\n\n  buttonDirection(e){\n    if(e === 'team'){\n      if(this.props.teamOpen) {\n        return 'toggle-team-show-btn'\n      } else {\n        return 'toggle-team-show-btn toggle-team-hide-btn'\n      }\n    }\n    if(e === 'comments'){\n      if(this.props.commentsOpen) {\n        return 'toggle-comments-show-btn'\n      } else {\n        return 'toggle-comments-show-btn toggle-comments-hide-btn'\n      }\n    }\n  }\n\n  render(){\n    return (\n      <div className={this.hidePanels()}>\n        <div className=\"team-header\">\n          <div className=\"grey-text h2 center-text\">Troop</div>\n          <div\n            className={this.buttonDirection('team')}\n            onClick={() => {this.props.dispatch(toggleTeam)}}>\n          </div>\n          <div className=\"faded-border\"></div>\n        </div>\n\n        <Troop />\n\n        <div className=\"comments-header\">\n          <div\n            className={this.buttonDirection('comments')}\n            onClick={() => {this.props.dispatch(toggleComments)}}>\n          </div>\n          <div className=\"grey-text h2 center-text\">Comments</div>\n          <div className=\"faded-border\"></div>\n        </div>\n\n        <Comments />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  teamOpen: state.mailTrooper.teamOpen,\n  commentsOpen: state.mailTrooper.commentsOpen\n})\n\nexport default connect(mapStateToProps)(RightSidebar)\n","import React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport moment from 'moment'\nimport Clipboard from 'clipboard'\n\nimport {deleteCampaign, removeRecruit, selectCampaign, updateCurrentVersion} from '../../../actions/email'\nimport {toggleCreateEmailModal, toggleCopiedModal} from '../../../actions/modal'\nimport {toggleReview} from '../../../actions'\n\nimport './LeftSidebar.css'\n\nnew Clipboard('.clipboard');\n\nexport class LeftSidebar extends Component {\n  showModal = e => {\n    e.preventDefault()\n    this.props.dispatch(toggleCreateEmailModal)\n  }\n\n  deleteEmail = (campaign, socket) => {\n    if(window.confirm('Are you sure you want to delete this campaign?')){\n      this.props.dispatch(deleteCampaign(campaign, socket))\n    }\n  }\n\n  removeEmail = (recruit, campaignId, socket) => {\n    this.props.dispatch(removeRecruit(recruit, campaignId, socket))\n  }\n\n  emailFile = (email) => {\n    const selectedCampaign = this.props.selectedCampaign\n    let classes = 'email-file'\n    const leftBorder = email.master === this.props.currentUser._id\n    ? ' red-left' : ' yellow-left'\n\n    classes += leftBorder\n\n    if(!selectedCampaign || email._id !== selectedCampaign._id) return classes\n    if(email._id === selectedCampaign._id) {\n      return classes += ' selected-shadow'\n    }\n  }\n\n  emails = () => {\n    if(this.props.emails){\n      return this.props.emails.map((email, index) => {\n        const master = email.master === this.props.currentUser._id\n        ? <span>\n          <span className=\"clipboard\"\n            data-clipboard-text={`${email.slug}@mailtroopers.com`}\n            onClick={() => {\n              this.props.dispatch(toggleCopiedModal)\n            }}\n        >\n          Get Link\n        </span> |\n        <span className=\"red-text\" onClick={() => this.deleteEmail(email._id, this.props.socket)}>\n          &nbsp;Delete\n        </span>\n        </span>\n        : <span\n          className=\"red-text\"\n          onClick={() => {\n            this.removeEmail(this.props.currentUser._id, email._id, this.props.socket)}}\n          >\n           Remove\n          </span>\n\n\n        return (\n        <div\n          className={this.emailFile(email)}\n          key={index}\n          onMouseOver={ e => {\n            e.currentTarget.lastChild.className = \"shown-email-options\"\n          }}\n          onMouseLeave={e => {\n            e.currentTarget.lastChild.className = \"hidden-email-options\"\n          }}\n          onClick={() => {\n            this.props.dispatch(selectCampaign(email))\n            this.props.dispatch(updateCurrentVersion(email.versions.length))\n          }}\n        >\n          <div className=\"h4 grey-text comment-date\">{email.name}</div>\n          <div className=\"p grey-text comment-comment\">\n            {moment(email.date).format('MM/DD/YYYY')}\n          </div>\n          <div className=\"hidden-email-options\" onClick={e => e.stopPropagation()}>\n            <div className=\"p grey-text right-text\">\n              {master}\n            </div>\n          </div>\n        </div>\n        )\n      })\n    }\n  }\n\n  buttonDirection = () => {\n    if(this.props.reviewOpen) {\n        return 'toggle-review-show-btn'\n    } else {\n        return 'toggle-review-show-btn toggle-review-hide-btn'\n      }\n  }\n\n  hidePanels = () => {\n    if(!this.props.reviewOpen){\n      return 'left-sidebar close-review'\n    }\n    return 'left-sidebar'\n  }\n\n  render() {\n    return (\n        <div className={this.hidePanels()}>\n          <div className=\"review-header\">\n            <div\n              className={this.buttonDirection()}\n              onClick={() => {this.props.dispatch(toggleReview)}}>\n            </div>\n            <div className=\"h2 grey-text center-text\">Reviews</div>\n          </div>\n\n          <div className=\"email-list-container\">\n            <div className=\"btn-container\">\n              <button\n                className=\"btn campaign-btn\"\n                onClick={e => this.showModal(e)}>\n                New Campaign  <img src={require(\"../../images/bomb.svg\")} alt=\"New Campaign\" />\n              </button>\n            </div>\n            <div style={{marginLeft: 'calc(50% - 87.5px)'}}>\n              <div className=\"circle-red\"></div>\n              <span className=\"p grey-text\" style={{float: 'left', marginTop: '5px'}}>Yours</span>\n              <div className=\"circle-yellow\"></div>\n              <span className=\"p grey-text\" style={{lineHeight: '25px'}}>Theirs</span>\n            </div>\n            {this.emails()}\n          </div>\n        </div>\n    )\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  emails: state.email.emails,\n  socket: state.io.socket,\n  currentVersion: state.email.currentVersion,\n  reviewOpen: state.mailTrooper.reviewOpen,\n  currentUser: state.user.currentUser,\n  selectedCampaign: state.email.selectedCampaign\n})\n\nexport default connect(mapStateToProps)(LeftSidebar)\n","import React from 'react'\nimport {connect} from 'react-redux'\n\nimport {updateCurrentVersion, deleteVersion} from '../../../../actions/email'\n\nimport './Version.css'\n\nexport function Version (props) {\n\n  const updateVersion = num => {\n    const toCheck = num  + props.currentVersion\n    if(toCheck > 0 && toCheck < props.selectedCampaign.versions.length + 1) {\n      props.dispatch(updateCurrentVersion(toCheck))\n    }\n  }\n\n  const version = () => {\n    if(!props.selectedCampaign || props.selectedCampaign.versions.length === 0){\n      return\n    }\n\n    return (\n      <div className=\"version-container\">\n        <div className=\"version-left-btn\" onClick={() => updateVersion(-1)}></div>\n        <div className=\"version-center-display\">\n          <div className=\"grey-text p\">{props.currentVersion} of {props.selectedCampaign.versions.length}</div>\n        </div>\n        <div className=\"version-right-btn\" onClick={() => updateVersion(1)}></div>\n      </div>\n    )\n  }\n\n  const deleteVersionOption = () => {\n    if(!props.selectedCampaign ||\n      props.selectedCampaign.versions.length <= 1 ||\n      props.selectedCampaign.master !== props.currentUser._id){\n      return\n    }\n\n    const currentVersion = props.selectedCampaign.versions[props.currentVersion - 1]._id\n    const campaignId = props.selectedCampaign._id\n    const socket = props.socket\n\n    return(\n      <div\n        className=\"delete-version red-text p center-text\"\n        onClick={(() => {\n          if(window.confirm('Are you sure you want to delete this version?')){\n            props.dispatch(deleteVersion(currentVersion, campaignId, socket))\n          }\n        })}>\n        Delete Version\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"version\">\n      {version()}\n      {deleteVersionOption()}\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  currentUser: state.user.currentUser,\n  selectedCampaign: state.email.selectedCampaign,\n  currentVersion: state.email.currentVersion,\n  socket: state.io.socket\n})\n\nexport default connect(mapStateToProps)(Version);\n","import React, {Component} from 'react'\nimport {connect} from 'react-redux'\n\nimport Version from './version/Version'\nimport {toggleLeftSidebar, toggleRightSidebar} from '../../../actions'\n\nimport './Main.css'\n\nexport class Main extends Component {\n\n  componentDidMount(){\n    this.props.socket.emit('subscribeToEmail', {userId: this.props.currentUser._id})\n  }\n\n  displayContainer(){\n    if(!this.props.selectedCampaign){\n      return <div className=\"email-container\">\n        <span className=\"h2 red-text center-text\">You must select a campaign or create a new one.<br /><br /></span>\n        <span className=\"h3 red-text center-text\">Here's how to make a new campaign:</span>\n        <span className=\"p grey-text\">\n          <ol>\n            <li>Click the button \"New Campaign\" and then name it.</li>\n            <li>Email the campaign you'd like to review to the email address we will provide you.</li>\n            <li>Click the \"Recruit\" button on the right side to add new people to review your campaign.</li>\n            <li>Notify them and let them comment on the version you just sent.</li>\n            <li>Send the revised email to the same provided address and repeat!</li>\n          </ol>\n        </span>\n      </div>\n    }\n    if(!this.props.selectedCampaign.versions.length){\n      return <div className=\"email-container center-text\" style={{padding: '10px'}}>\n        <span className=\"h3 red-text\">\n          You haven't made a version for this campaign yet! Send the email you'd\n          like to review to the email address below:\n        </span>\n        <br />\n        <span className=\"h4 grey-text\">\n          {this.props.selectedCampaign.slug}@mailtroopers.com\n        </span>\n        <br />\n        <br />\n        <span className=\"h4 red-text\">\n          Hint: You can quickly copy the email address by clicking \"Get Link\" on\n          the campaign under the review panel.\n        </span>\n      </div>\n    }\n\n    const current = this.props.selectedCampaign.versions[this.props.currentVersion - 1]\n    if(!current) return ''\n    return <div className=\"email-container\">\n          <div className=\"p center-text grey-text\" style={{padding: '3px'}}>\n            <span className=\"h4 red-text\">Subject:</span>\n            &nbsp;{current.subject || ''}\n          </div>\n          <div\n            dangerouslySetInnerHTML={{__html: current.html}}\n          ></div>\n        </div>\n  }\n\n  pickMainClass(){\n    if(window.innerWidth < 765){\n      return 'main-mobile'\n    }\n    if(this.props.leftSidebarOpen && !this.props.rightSidebarOpen) {\n      return 'main close-right-sidebar'\n    }\n    if(!this.props.leftSidebarOpen && this.props.rightSidebarOpen) {\n      return 'main close-left-sidebar'\n    }\n    if(!this.props.leftSidebarOpen && !this.props.rightSidebarOpen) {\n      return 'main close-both-sidebars'\n    }\n    return 'main'\n  }\n\n  buttonDirection(e){\n    if(e === 'right'){\n      if(this.props.rightSidebarOpen) {\n        return 'button right-facing-btn'\n      } else {\n        return 'button left-facing-btn'\n      }\n    }\n    if(e === 'left'){\n      if(this.props.leftSidebarOpen) {\n        return 'button left-facing-btn'\n      } else {\n        return 'button right-facing-btn'\n      }\n    }\n  }\n\n  leftBtn(){\n    if(window.innerWidth < 765){\n      return\n    }\n    return(\n      <div\n        className=\"left-close-button\"\n        onClick={() => {this.props.dispatch(toggleLeftSidebar)}}>\n        <div className={this.buttonDirection('left')}></div>\n      </div>\n    )\n  }\n  rightBtn(){\n    if(window.innerWidth < 765){\n      return\n    }\n    return(\n      <div\n        className=\"right-close-button\"\n        onClick={() => {this.props.dispatch(toggleRightSidebar)}}>\n        <div className={this.buttonDirection('right')}></div>\n      </div>\n    )\n  }\n\n  render(){\n    return (\n        <div className={this.pickMainClass()}>\n          <Version />\n          {this.leftBtn()}\n          {this.rightBtn()}\n          {this.displayContainer()}\n        </div>\n    )\n  }\n\n}\n\nconst mapStateToProps = state => ({\n    leftSidebarOpen: state.mailTrooper.leftSidebarOpen,\n    rightSidebarOpen: state.mailTrooper.rightSidebarOpen,\n    selectedCampaign: state.email.selectedCampaign,\n    currentVersion: state.email.currentVersion,\n    currentUser: state.user.currentUser,\n    socket: state.io.socket\n})\n\nexport default connect(mapStateToProps)(Main)\n","import React, {Component} from 'react'\nimport {connect} from 'react-redux'\n\nimport {recruit, clearRecruitMsgs} from '../../../actions/email'\nimport {toggleRecruitModal} from '../../../actions/modal'\n\nimport './RecruitModal.css'\n\nexport class RecruitModal extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      copied: false,\n      addressList: [],\n      notEmail: ''\n    }\n  }\n\n  hideRecruitModal = (e) => {\n    e.preventDefault()\n    this.props.dispatch(toggleRecruitModal)\n    this.props.dispatch(clearRecruitMsgs)\n  }\n\n  validateEmail(address)  {\n    if (/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(address)) {\n      return true\n    }\n    return false\n  }\n\n  emailError() {\n    if(!this.state.notEmail) return ''\n    return (\n      <div className=\"red-text center-text h4\">\n        {this.state.notEmail}\n      </div>\n    )\n  }\n\n  addToList() {\n    let address = document.getElementById('recruit-address').value\n    //validate our email\n    if(!this.validateEmail(address)) {\n      return this.setState({\n        notEmail: 'You must use a valid email address.'\n      })\n    }\n\n    const findEmail = (email) => {\n      return email === address\n    }\n\n    if(this.state.addressList.find(findEmail)) {\n      return this.setState({\n        notEmail: 'You\\'ve already entered that email address.'\n      })\n    }\n\n    if(address === this.props.userEmail) {\n      return this.setState({\n        notEmail: \"You can't recruit yourself silly.\"\n      })\n    }\n\n    if(address === this.props.userEmail) {\n      return this.setState({\n        notEmail: \"You can't recruit yourself silly.\"\n      })\n    }\n\n    const isRecruit = this.props.selectedCampaign.contributors.map(contributor => {\n      if(address === contributor.email) return true\n      return false\n    })\n    if(isRecruit.includes(true)){\n      return this.setState({\n        notEmail: \"You've already recruited that person.\"\n      })\n    }\n\n    //all tests past ready to add to list\n    this.setState({\n      addressList: [...this.state.addressList, address],\n      notEmail: ''\n    })\n    document.getElementById('recruit-address').value = ''\n  }\n\n  removeFromList(address) {\n    this.setState({\n      addressList: this.state.addressList.filter(add => add !== address)\n    })\n  }\n\n  list() {\n    return this.state.addressList.map((address, index) => {\n      return (\n        <div key={index} className=\"address-container\">\n          <span className=\"p white-text address\">{address}</span>\n          <span\n            className=\"delete-address\"\n            onClick={() => this.removeFromList(address)}\n          ></span>\n        </div>\n      )\n    })\n  }\n\n  sendRecruit() {\n    const addressList = this.state.addressList\n    const id = this.props.selectedCampaign._id\n    const socket = this.props.socket\n    this.props.dispatch(recruit(addressList, id, socket))\n  }\n\n  recruitBtn() {\n    if(this.state.addressList.length){\n      return <div className=\"btn-container\">\n        <button className=\"btn\" onClick={() => this.sendRecruit()}>\n          Add to Troop\n        </button>\n      </div>\n    }\n    return ''\n  }\n\n  addRecruitContainer() {\n    return (\n    <div>\n      <div className=\"h3 grey-text center-text modal-padding\">Add the email addresses of the people you want to recruit!</div>\n\n        {this.emailError()}\n\n        <form\n          onSubmit={(e) => {\n          e.preventDefault()\n          this.addToList()}\n          }\n        >\n          <input\n            className=\"link-container p grey-text\"\n            type=\"text\"\n            id=\"recruit-address\"\n          />\n          <button\n            className=\"add-address\"\n          ></button>\n        </form>\n\n        {this.list()}\n\n        {this.recruitBtn()}\n      </div>\n    )\n  }\n\n  recruitedContainer() {\n    const failures = this.props.failures\n    const successes = this.props.successes\n\n    const successMsg = successes.length\n    ? <div>\n        <div className=\"h3 modal-padding grey-text\">These were successfully recruited:</div>\n        <div className=\"p modal-padding grey-text\">{successes.join(', ')}</div>\n      </div>\n    : ''\n\n    const failureMsg = failures.length\n    ? <div>\n        <div className=\"h3 modal-padding red-text\">\n          These did not yet have an account with us:<br />\n            <span style={{fontSize: '.7em'}}>Ask them to sign up and try again!</span>\n        </div>\n        <div className=\"p modal-padding grey-text\">{failures.join(', ')}</div>\n      </div>\n    : ''\n\n    return (\n      <div>\n        {successMsg}\n        {failureMsg}\n      </div>\n    )\n  }\n\n  render(){\n    return (\n      <div className=\"modal-window\" onClick={this.hideRecruitModal}>\n        <div onClick={(e) => e.stopPropagation()} className=\"modal\">\n          <div className=\"modal-close\" onClick={this.hideRecruitModal}></div>\n          { !this.props.successes || !this.props.failures\n            ? this.addRecruitContainer()\n            : this.recruitedContainer()\n          }\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapstateToProps = state => ({\n  selectedCampaign: state.email.selectedCampaign,\n  socket: state.io.socket,\n  failures: state.email.recruitFailures,\n  successes: state.email.recruitSuccesses,\n  userEmail: state.user.currentUser.email\n})\n\nexport default connect(mapstateToProps)(RecruitModal)\n","import React, {Component} from 'react'\nimport {connect} from 'react-redux'\n\nimport {toggleCommentModal} from '../../../actions/modal'\nimport {sendComment} from '../../../actions/email'\n\nimport './CommentModal.css'\nimport thumbsUp from '../../images/thumbs-up.svg'\n\nexport class CommentModal extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      sent: false,\n      text: '',\n      warning: false\n    }\n  }\n\n  handleChange = (e) => {\n    const text = e.target.value\n    this.setState({\n      text: text\n    })\n  }\n\n  hideCommentModal = (e) => {\n    e.preventDefault()\n    this.props.dispatch(toggleCommentModal)\n  }\n\n  send = (comment) => {\n    if(this.state.text.trim() !== ''){\n      const version = this.props.selectedCampaign.versions[this.props.currentVersion - 1]._id\n      const campaignId = this.props.selectedCampaign._id\n      const userId = this.props.currentUser._id\n      const socket = this.props.socket\n\n      this.props.dispatch(sendComment(campaignId, version, userId, comment, socket))\n\n      this.setState({\n        sent: true\n      })\n    } else {\n      this.setState({\n        warning: true\n      })\n    }\n  }\n\n  render(){\n    const warning = this.state.warning\n      ? <div\n          className=\"center-text p grey-text\"\n          style={{margin: '10px 0'}}\n        >\n          Please enter a comment in the comment field.\n        </div>\n      :\n      ''\n\n    return(\n      <div className=\"modal-window\" onClick={this.hideCommentModal}>\n        <div onClick={(e) => e.stopPropagation()} className=\"modal\">\n          <div className=\"modal-close\" onClick={this.hideCommentModal}></div>\n          { !this.state.sent\n          ?\n          <div>\n            <div className=\"h3 grey-text center-text\">Type your comment below</div>\n            <textarea\n              className=\"comment-input-container p grey-text\"\n              type=\"text\"\n              id=\"comment-input\"\n              onChange={this.handleChange}\n            />\n\n            <div className=\"btn-container\">\n              <button className=\"btn\" onClick={() => this.send(this.state.text)}>Comment <img src={require(\"../../images/bullhorn.svg\")}   alt=\"Share\" /></button>\n            </div>\n            {warning}\n          </div>\n          :\n          <div>\n            <div className=\"h3 grey-text center-text\">Your comment has been posted!</div>\n            <div className=\"thumbs-up-container\">\n              <img src={thumbsUp} alt=\"Comment Posted!\" />\n            </div>\n          </div>\n          }\n        </div>\n      </div>\n    )\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  selectedCampaign: state.email.selectedCampaign,\n  currentVersion: state.email.currentVersion,\n  currentUser: state.user.currentUser,\n  socket: state.io.socket\n})\n\nexport default connect(mapStateToProps)(CommentModal)\n","import React from 'react'\n\nimport './Input.css'\n\nexport default class Input extends React.Component {\n    componentDidUpdate(prevProps) {\n        if (!prevProps.meta.active && this.props.meta.active) {\n          this.input.focus()\n        }\n    }\n\n    render() {\n        let error;\n        if (this.props.meta.touched && this.props.meta.error) {\n          error = <div className=\"form-error\">{this.props.meta.error}</div>\n        }\n\n        let warning;\n        if (this.props.meta.touched && this.props.meta.warning) {\n            warning = (\n              <div className=\"form-warning\">{this.props.meta.warning}</div>\n            )\n        }\n\n        return (\n            <div className=\"form-input\">\n                <label htmlFor={this.props.input.name}>\n                  {this.props.label}\n                </label>\n                <div className=\"p red-text\" style={{fontSize: '12px'}}>{error}\n                {warning}</div>\n                <input\n                  style={{fontFamily: '\\'Scope One\\', serif', fontSize: '16px', marginBottom: '10px'}}\n                  className=\"border grey-text\"\n                  {...this.props.input}\n                  id={this.props.input.name}\n                  type={this.props.type}\n                  ref={input => (this.input = input)}\n                />\n\n            </div>\n        )\n    }\n}\n","export const required = value => (value ? undefined : 'Required');\nexport const nonEmpty = value =>\n    value.trim() !== '' ? undefined : 'Cannot be empty';\nexport const isTrimmed = value =>\n    value.trim() === value ? undefined : 'Cannot start or end with whitespace';\nexport const length = length => value => {\n    if (length.min && value.length < length.min) {\n        return `Must be at least ${length.min} characters long`;\n    }\n    if (length.max && value.length > length.max) {\n        return `Must be at most ${length.max} characters long`;\n    }\n};\nexport const matches = field => (value, allValues) =>{\n    return field in allValues && value.trim() === allValues[field].trim()\n        ? undefined\n        : 'Does not match';\n  }\nexport const email = value =>\n    value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value) ?\n    'Invalid email address' : undefined\n","import React, {Component} from 'react'\nimport {Field, reduxForm, focus} from 'redux-form'\n\nimport Input from '../../input/Input'\nimport {required, nonEmpty, isTrimmed} from '../../../validators'\nimport {createNewCampaign} from '../../../actions/email'\n\nimport './CreateEmailModal.css'\n\nclass CreateEmailForm extends Component {\n  onSubmit(values) {\n    const {campaign} = values\n    return this.props.dispatch(createNewCampaign(campaign, this.props.user, this.props.socket))\n  }\n\n  render() {\n    return (\n      <div>\n        <form\n          className=\"create-email-form\"\n          onSubmit={this.props.handleSubmit(values => this.onSubmit(values))}\n        >\n          <Field\n            component={Input}\n            type=\"text\"\n            name=\"campaign\"\n            validate={[required, nonEmpty, isTrimmed]}\n          />\n          <div className=\"btn-container\">\n            <button\n              className=\"btn\"\n              type=\"submit\"\n              disabled={this.props.pristine || this.props.submitting}\n            >\n              Create\n            </button>\n          </div>\n        </ form>\n      </div>\n    )\n  }\n}\n\nexport default reduxForm({\n  form: 'createEmail',\n  onSubmitFail: (errors, dispatch) =>\n        dispatch(focus('createEmail', Object.keys(errors)[0]))\n})(CreateEmailForm)\n","import React from 'react'\nimport CreateEmailForm from './CreateEmailForm'\nimport {connect} from 'react-redux'\n\nimport {toggleCreateEmailModal} from '../../../actions/modal'\n\nexport const CreateEmailModal = props => {\n  const hideModal = e => {\n    e.preventDefault()\n    props.dispatch(toggleCreateEmailModal)\n  }\n\n  return (\n    <div className=\"modal-window\">\n      <div className=\"modal center-text\">\n        <div className=\"modal-close\" onClick={e => hideModal(e)}></div>\n        <div className=\"h3 grey-text\">\n          Make a new campaign!<br />\n          <span style={{fontSize: \".8em\"}}>Lets start with a name...</span>\n        </div>\n        <div className=\"p red-text\">{props.err}</div>\n\n        <CreateEmailForm user={props.user} socket={props.socket} />\n\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => {\n   return {\n    err: state.email.createEmailErr,\n    user: state.user.currentUser,\n    socket: state.io.socket\n  }\n}\n\nexport default connect(mapStateToProps)(CreateEmailModal)\n","import React, {Component} from 'react'\nimport {connect} from 'react-redux'\n\nimport {toggleCopiedModal} from '../../../actions/modal'\n\nimport './CopiedModal.css'\nimport thumbsUp from '../../images/thumbs-up.svg'\n\nexport class CopiedModal extends Component {\n  hideCopiedModal = () => {\n    this.props.dispatch(toggleCopiedModal)\n  }\n\n  render(){\n    return(\n      <div className=\"modal-window\" onClick={this.hideCopiedModal}>\n        <div onClick={(e) => e.stopPropagation()} className=\"modal\">\n          <div className=\"modal-close\" onClick={this.hideCopiedModal}></div>\n          <div>\n            <div className=\"h3 grey-text center-text\">Copied to Clipboard!</div>\n            <div className=\"thumbs-up-container\">\n              <img src={thumbsUp} alt=\"Copied to Clipboard!\" />\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default connect()(CopiedModal)\n","import React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport {Redirect} from 'react-router-dom'\nimport PacmanLoader from 'halogen/PacmanLoader'\n\nimport RightSidebar from './right-sidebar/RightSidebar'\nimport LeftSidebar from './left-sidebar/LeftSidebar'\nimport Main from './main/Main'\n\n\nimport RecruitModal from '../modals/recruit-modal/RecruitModal'\nimport CommentModal from '../modals/comment-modal/CommentModal'\nimport CreateEmailModal from '../modals/create-email-modal/CreateEmailModal'\nimport CopiedModal from '../modals/copied-modal/CopiedModal'\n\nimport {toggleLeftSidebar} from '../../actions'\n\nimport './Dashboard.css'\n\nexport class Dashboard extends Component {\n\n    componentDidMount() {\n        if (!this.props.loggedIn) {\n            return\n        }\n\n        if(window.innerWidth < 765){\n          this.props.dispatch(toggleLeftSidebar)\n        }\n    }\n\n    pickMainClass() {\n      if(window.innerWidth < 765){\n        if(!this.props.leftSidebarOpen && !this.props.rightSidebarOpen) {\n          return 'grid-mobile'\n        }\n      }\n      return 'grid'\n    }\n\n    render() {\n      if (!this.props.loggedIn) {\n          return <Redirect to=\"/\" />;\n      }\n\n      const recruitmodal = this.props.recruitModal ? <RecruitModal /> : ''\n      const commentmodal = this.props.commentModal ? <CommentModal /> : ''\n      const createEmailModal = this.props.createEmailModal ? <CreateEmailModal /> : ''\n      const copiedModal = this.props.copiedModal ? <CopiedModal /> : ''\n      return (\n        <div>\n        {\n          this.props.currentUser && this.props.emails && this.props.socket ?\n          <div className=\"grid\">\n            <LeftSidebar />\n            <RightSidebar />\n            <Main />\n          </div> :\n          <div className='loader-container'>\n            <PacmanLoader color=\"#f54f45\" size={25} margin={4} />\n          </div>\n        }\n\n          {recruitmodal}\n          {commentmodal}\n          {createEmailModal}\n          {copiedModal}\n          </div>\n      );\n    }\n}\n\nconst mapStateToProps = state => ({\n    recruitModal: state.modal.recruitModal,\n    commentModal: state.modal.commentModal,\n    createEmailModal: state.modal.createEmailModal,\n    copiedModal: state.modal.copiedModal,\n    loggedIn: state.user.authToken !== null,\n    currentUser: state.user.currentUser,\n    emails: state.email.emails,\n    selectedCampaign: state.email.selectedCampaign,\n    socket: state.io.socket\n});\n\nexport default connect(mapStateToProps)(Dashboard)\n","import React, {Component} from 'react'\nimport {Field, reduxForm, focus} from 'redux-form'\nimport {registerUser, logInUser} from '../../../actions/user'\nimport {Link} from 'react-router-dom'\n\nimport Input from '../../input/Input'\nimport {required, nonEmpty, matches,\n       length, isTrimmed, email} from '../../../validators'\n\n\nimport './SignUp.css'\n\nclass SignUp extends Component {\n  onSubmit(values) {\n        const {firstName, lastName, email, password} = values\n        const user = {firstName, lastName, email, password}\n        return this.props\n            .dispatch(registerUser(user))\n            .then(() => {\n              this.props.dispatch(logInUser(email, password))\n            });\n    }\n\n\n  render() {\n    return (\n        <div className=\"modal-window\">\n          <div className=\"modal center-text\">\n            <Link to=\"/\">\n              <div className=\"modal-close\"></div>\n            </ Link>\n            <div className=\"h3 grey-text\">Sign Up</div>\n            <div className=\"p red-text\">{this.props.regErr}</div>\n            <form\n              className=\"login-form\"\n              onSubmit={this.props.handleSubmit(values =>\n                this.onSubmit(values)\n            )}>\n              <label htmlFor=\"firstName\" className=\"grey-text h4\">First name</label>\n                <Field\n                component={Input}\n                type=\"text\"\n                name=\"firstName\"\n                validate={[required, nonEmpty, isTrimmed]}\n              />\n              <label htmlFor=\"lastName\" className=\"grey-text h4\">Last name</label>\n                <Field\n                  component={Input}\n                  type=\"text\"\n                  name=\"lastName\"\n                  validate={[required, nonEmpty, isTrimmed]}\n                />\n              <label htmlFor=\"email\" className=\"grey-text h4\">Email</label>\n                <Field\n                  component={Input}\n                  type=\"text\"\n                  name=\"email\"\n                  validate={[required, nonEmpty, isTrimmed, email]}\n                />\n              <label htmlFor=\"password\" className=\"grey-text h4\">Password</label>\n                <Field\n                    component={Input}\n                    type=\"password\"\n                    name=\"password\"\n                    validate={[required, length({min: 3, max: 72}), isTrimmed]}\n                />\n              <label htmlFor=\"passwordConfirm\" className=\"grey-text h4\">Confirm password</label>\n                <Field\n                    component={Input}\n                    type=\"password\"\n                    name=\"passwordConfirm\"\n                    validate={[required, nonEmpty, matches('password')]}\n                />\n              <div className=\"btn-container\">\n                <button\n                  className=\"btn\"\n                  type=\"submit\"\n                  disabled={this.props.pristine || this.props.submitting}\n                >\n                  Register\n                </button>\n              </div>\n              <Link to=\"/login\">\n                <div className=\"grey-text p\">Already have an account? Log in</div>\n              </Link>\n            </ form>\n          </div>\n        </div>\n    )\n  }\n}\n\nexport default reduxForm({\n  form: 'registration',\n  onSubmitFail: (errors, dispatch) =>\n        dispatch(focus('registration', Object.keys(errors)[0]))\n})(SignUp)\n","import React from 'react'\nimport SignUp from './SignUp'\nimport {connect} from 'react-redux'\nimport {Redirect} from 'react-router-dom'\n\nexport const SignUpWrapper = props => {\n\n  if(props.loggedIn) {\n    return <Redirect to='/dashboard' />\n  }\n\n  return (\n    <div>\n      <SignUp err={props.logErr}/>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  regErr: state.user.regErr,\n  loggedIn: state.user.currentUser\n})\n\nexport default connect(mapStateToProps)(SignUpWrapper)\n","import React, {Component} from 'react'\nimport {Field, reduxForm, focus} from 'redux-form'\nimport {logInUser} from '../../../actions/user'\nimport {Link} from 'react-router-dom'\n\nimport Input from '../../input/Input'\nimport {required, nonEmpty,\n       isTrimmed, email} from '../../../validators'\n\n\nimport './LogIn.css'\n\nclass LogIn extends Component {\n  onSubmit(values) {\n        const {email, password} = values\n        return this.props\n            .dispatch(logInUser(email, password))\n    }\n\n  render() {\n    return (\n        <div className=\"modal-window\">\n          <div className=\"modal center-text\">\n            <Link to=\"/\">\n              <div className=\"modal-close\"></div>\n            </ Link>\n            <div className=\"h3 grey-text\">Log In</div>\n            <div className=\"p red-text\">{this.props.err}</div>\n            <form\n              className=\"login-form\"\n              onSubmit={this.props.handleSubmit(values =>\n                this.onSubmit(values)\n            )}>\n\n              <label htmlFor=\"email\" className=\"grey-text h4\">Email</label>\n                <Field\n                  component={Input}\n                  type=\"text\"\n                  name=\"email\"\n                  validate={[required, nonEmpty, isTrimmed, email]}\n                />\n              <label htmlFor=\"password\" className=\"grey-text h4\">Password</label>\n                <Field\n                    component={Input}\n                    type=\"password\"\n                    name=\"password\"\n                    validate={[required, isTrimmed]}\n                />\n              <div className=\"btn-container\">\n                <button\n                  className=\"btn\"\n                  type=\"submit\"\n                  disabled={this.props.pristine || this.props.submitting}\n                >\n                  Log In\n                </button>\n              </div>\n              <Link to=\"/register\">\n                <div className=\"grey-text p\">Need an account? Sign Up</div>\n              </Link>\n\n              <div className=\"grey-bg\">\n                <div className=\"light-grey-text p\">\n                  Or use a the demo account!\n                </div>\n                <div className=\"light-grey-text p\">\n                  Email: demo@test.com <br />\n                  Password: 123\n                </div>\n              </div>\n\n            </ form>\n          </div>\n        </div>\n    )\n  }\n}\n\nexport default reduxForm({\n  form: 'login',\n  onSubmitFail: (errors, dispatch) =>\n        dispatch(focus('login', Object.keys(errors)[0]))\n})(LogIn)\n","import React from 'react'\nimport LogIn from './LogIn'\nimport {connect} from 'react-redux'\nimport {Redirect} from 'react-router-dom'\n\nexport const LogInWrapper = props => {\n\n  if(props.loggedIn) {\n    return <Redirect to='/dashboard' />\n  }\n\n  return (\n    <div>\n      <LogIn err={props.logErr}/>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => {\n   return {\n    logErr: state.user.logErr,\n    loggedIn: state.user.currentUser\n  }\n}\n\nexport default connect(mapStateToProps)(LogInWrapper)\n","import React, {Component} from 'react'\nimport {Route, BrowserRouter as Router} from 'react-router-dom'\nimport {connect} from 'react-redux'\n\nimport {refreshAuthToken} from '../../actions/user'\n\nimport LandingPage from '../landing-page/LandingPage'\nimport Navbar from '../navbar/Navbar'\nimport Dashboard from '../dashboard/Dashboard'\n\n//Modals\nimport SignUpWrapper from '../modals/signup-modal/SignUpWrapper'\nimport LogInWrapper from '../modals/login-modal/LogInWrapper'\n\n\nimport {disconnectSocket} from '../../actions/io'\n\nimport './App.css'\n\nexport class App extends Component {\n\n  componentDidMount() {\n\n    if (this.props.hasAuthToken) {\n      // Try to get a fresh auth token if we had an existing one in\n      // localStorage\n      this.props.dispatch(refreshAuthToken())\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.loggedIn && !this.props.loggedIn) {\n      // When we are logged in, refresh the auth token periodically\n      this.startPeriodicRefresh()\n    } else if (!nextProps.loggedIn && this.props.loggedIn) {\n      // Stop refreshing when we log out\n      this.stopPeriodicRefresh()\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.socket.close()\n    this.props.dispatch(disconnectSocket(this.props.socket))\n    this.stopPeriodicRefresh()\n  }\n\n  startPeriodicRefresh() {\n    this.refreshInterval = setInterval(\n      () => this.props.dispatch(refreshAuthToken()),\n      60 * 60 * 1000 // One hour\n    )\n  }\n\n  stopPeriodicRefresh() {\n    if (!this.refreshInterval) {\n      return\n    }\n    clearInterval(this.refreshInterval)\n  }\n\n  render() {\n\n    return (\n      <Router>\n        <div>\n          <Route path=\"/\" component={Navbar} />\n          {[\"/\", \"/login\", \"/signup\"].map((path, index) =>\n            <Route exact path={path} component={LandingPage} key={index}/>\n          )}\n          <Route exact path=\"/dashboard\" component={Dashboard} />\n          <Route exact path=\"/register\" component={SignUpWrapper} />\n          <Route exact path=\"/login\" component={LogInWrapper} />\n        </div>\n      </Router>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n    hasAuthToken: state.user.authToken !== null,\n    loggedIn: state.user.currentUser !== null,\n    socket: state.io.socket\n})\n\nexport default connect(mapStateToProps)(App)\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actions from '../actions'\n\nconst initialState = {\n  leftSidebarOpen: true,\n  rightSidebarOpen: true,\n  teamOpen: true,\n  commentsOpen: true,\n  reviewOpen: true,\n}\n\nexport const mailTrooperReducer = (state=initialState, action) => {\n  if(action.type === actions.TOGGLE_LEFT_SIDEBAR) {\n    return Object.assign({}, state, {leftSidebarOpen: !state.leftSidebarOpen})\n  }\n  else if(action.type === actions.TOGGLE_RIGHT_SIDEBAR) {\n    return Object.assign({}, state, {rightSidebarOpen: !state.rightSidebarOpen})\n  }\n  else if(action.type === actions.TOGGLE_TEAM) {\n    return Object.assign({}, state, {teamOpen: !state.teamOpen})\n  }\n  else if(action.type === actions.TOGGLE_COMMENTS) {\n    return Object.assign({}, state, {commentsOpen: !state.commentsOpen})\n  }\n  else if(action.type === actions.TOGGLE_REVIEW) {\n    return Object.assign({}, state, {reviewOpen: !state.reviewOpen})\n  }\n  return state\n}\n","import * as actions from '../actions/modal'\n\nconst initialState = {\n  recruitModal: false,\n  commentModal: false,\n  createEmailModal: false,\n  copiedModal: false,\n}\n\nexport const modalReducer = (state=initialState, action) => {\n  if(action.type === actions.TOGGLE_RECRUIT_MODAL) {\n    return Object.assign({}, state, {recruitModal: !state.recruitModal})\n  }\n  else if(action.type === actions.TOGGLE_COMMENT_MODAL) {\n    return Object.assign({}, state, {commentModal: !state.commentModal})\n  }\n  else if(action.type === actions.TOGGLE_CREATE_EMAIL_MODAL) {\n    return Object.assign({}, state, {createEmailModal: !state.createEmailModal})\n  }\n  else if(action.type === actions.TOGGLE_COPIED_MODAL) {\n    return Object.assign({}, state, {copiedModal: !state.copiedModal})\n  }\n  return state\n}\n","import {\n  REGISTER_ERR,\n  LOGIN_ERR,\n  SET_AUTH_TOKEN,\n  SET_CURRENT_USER\n  } from '../actions/user'\n\nconst initialState = {\n  regErr: null,\n  logErr: null,\n  authToken: null,\n  currentUser: null\n}\n\nexport const userReducer = (state=initialState, action) => {\n  if(action.type === REGISTER_ERR){\n    return Object.assign({}, state, {\n      regErr: action.err\n    })\n  }\n  else if(action.type === LOGIN_ERR){\n    return Object.assign({}, state, {\n      logErr: action.err\n    })\n  }\n  else if (action.type === SET_AUTH_TOKEN) {\n    return Object.assign({}, state, {\n      authToken: action.authToken\n    });\n  }\n  else if (action.type === SET_CURRENT_USER) {\n    return Object.assign({}, state, {\n      currentUser: action.currentUser\n    });\n  }\n  return state\n}\n","import * as  actions from '../actions/email'\n\nconst initialState = {\n  createEmailErr: null,\n  emails: null,\n  selectedCampaign: null,\n  currentVersion: 0,\n  recruitFailures: null,\n  recruitSuccesses: null\n}\n\nexport const emailReducer = (state=initialState, action) => {\n  if (action.type === actions.CREATE_EMAIL_ERR) {\n    return Object.assign({}, state, {createEmailErr: action.err})\n  }\n  else if (action.type === actions.STORE_EMAILS) {\n    return Object.assign({}, state, {emails: action.emails})\n  }\n  else if (action.type === actions.ADD_NEW_CAMPAIGN) {\n    return Object.assign({}, state, {\n      emails: [action.campaign, ...state.emails],\n      selectedCampaign: action.campaign,\n      currentVersion: 0\n    })\n  }\n  else if (action.type === actions.REMOVE_CAMPAIGN) {\n    return Object.assign({}, state, {\n      emails: state.emails.filter(email => email._id !== action.campaign._id)\n    })\n  }\n  else if(action.type === actions.SELECT_CAMPAIGN) {\n    return Object.assign({}, state, {selectedCampaign: action.campaign})\n  }\n  else if(action.type === actions.UPDATE_CURRENT_VERSION) {\n    return Object.assign({}, state, {currentVersion: action.version})\n  }\n  else if(action.type === actions.UPDATE_CAMPAIGN) {\n    let returnedMail = action.campaign.email\n    return Object.assign({}, state, {\n      emails: state.emails.map( email => {\n        if(email._id === returnedMail._id){\n          email = returnedMail\n        }\n        return email\n      }),\n      selectedCampaign: returnedMail,\n      currentVersion: returnedMail.versions.length\n    })\n  }\n  else if(action.type === actions.RECRUITED) {\n    return Object.assign({}, state, {\n      recruitFailures: action.recruits.failures,\n      recruitSuccesses: action.recruits.successful\n    })\n  }\n  else if(action.type === actions.CLEAR_RECRUIT_MSGS) {\n    return Object.assign({}, state, {\n      recruitFailures: null,\n      recruitSuccesses: null\n    })\n  }\n\n  return state\n}\n","import {CONNECT_SOCKET, DISCONNECT_SOCKET} from '../actions/io'\n\nconst initialState = {\n  socket: null\n}\n\nexport const ioReducer = (state=initialState, action) => {\n  if(action.type === CONNECT_SOCKET){\n    return Object.assign({}, state, {\n      socket: action.socket\n    })\n  } else if(action.type === DISCONNECT_SOCKET){\n    return Object.assign({}, state, {\n      socket: null\n    })\n  }\n  return state\n}\n","import {applyMiddleware, createStore, combineReducers} from 'redux'\nimport {reducer as formReducer} from 'redux-form'\nimport thunk from 'redux-thunk'\n\nimport {loadAuthToken} from './local-storage'\nimport {setAuthToken} from './actions/user'\n\nimport {mailTrooperReducer} from './reducers'\nimport {modalReducer} from './reducers/modal'\nimport {userReducer} from './reducers/user'\nimport {emailReducer} from './reducers/email'\nimport {ioReducer} from './reducers/io'\n\nconst store = (\n  createStore(combineReducers({\n    mailTrooper: mailTrooperReducer,\n    modal: modalReducer,\n    user: userReducer,\n    email: emailReducer,\n    form: formReducer,\n    io: ioReducer\n  }),\n  applyMiddleware(thunk))\n)\n\nconst authToken = loadAuthToken()\nif (authToken) {\n    const token = authToken\n    store.dispatch(setAuthToken(token))\n}\n\nexport default store\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {Provider} from 'react-redux'\n\nimport './index.css'\nimport App from './components/app/App'\nimport registerServiceWorker from './registerServiceWorker'\nimport store from './store'\n\nReactDOM.render(\n  <Provider store={store}>\n      <App />\n  </Provider>,\n  document.getElementById('root'))\nregisterServiceWorker()\n","module.exports = __webpack_public_path__ + \"static/media/thumbs-up.fcdde84b.svg\";"],"sourceRoot":""}